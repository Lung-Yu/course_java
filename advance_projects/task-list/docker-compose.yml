# ==========================================
# Task List 應用程式 - 開發測試環境
# 部署方式: docker-compose up -d
# ==========================================

services:
  # PostgreSQL 資料庫
  postgres:
    image: postgres:15-alpine
    container_name: task-list-postgres-dev
    environment:
      POSTGRES_DB: demo_task_db
      POSTGRES_USER: demo-task
      POSTGRES_PASSWORD: demo-pwd
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sample_data:/docker-entrypoint-initdb.d:ro
    networks:
      - task-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo-task -d demo_task_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Task List 應用程式
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_ENV: development
    container_name: task-list-app-dev
    environment:
      # 資料庫連接配置
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/demo_task_db
      SPRING_DATASOURCE_USERNAME: demo-task
      SPRING_DATASOURCE_PASSWORD: demo-pwd
      
      # JPA 配置（開發環境使用 update）
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
      
      # 日誌配置
      LOGGING_LEVEL_COM_TYGRUS_TASK_LIST: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: INFO
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: DEBUG
      
      # 應用程式配置
      SPRING_PROFILES_ACTIVE: dev
      SERVER_PORT: 8080
      
      # 資料庫等待配置
      DB_HOST: postgres
      DB_PORT: 5432
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - task-network
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # pgAdmin (資料庫管理工具)
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: task-list-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@taskapp.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - task-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
    name: task-list-postgres-dev-data
  pgadmin_data:
    driver: local
    name: task-list-pgadmin-dev-data

networks:
  task-network:
    driver: bridge
    name: task-list-dev-network