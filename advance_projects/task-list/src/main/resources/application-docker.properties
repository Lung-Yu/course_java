# Docker 環境的 Spring Boot 配置
spring.application.name=task-list

# Logging Configuration
logging.config=classpath:logback-spring.xml
logging.level.com.tygrus.task_list=DEBUG
logging.level.com.tygrus.task_list.application.usecase.TaskReminderUseCase=TRACE
logging.level.com.tygrus.task_list.application.service.notification=DEBUG
logging.level.com.tygrus.task_list.application.usecase.BatchUpdateTasksUseCase=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO

# Business Logic Logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) [%thread] %cyan(%logger{36}) : %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n

# PostgreSQL Configuration (Docker environment)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/demo_task_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:demo-task}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:demo-pwd}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false

# Transaction Management
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Mail Configuration (Mock for testing)
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username=test
spring.mail.password=test
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

# Scheduler Configuration
task.scheduler.enabled=true
task.reminder.fixed-delay=300000

# Actuator Configuration for Health Check
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.db.enabled=true

# Server Configuration
server.port=8080
server.servlet.context-path=/