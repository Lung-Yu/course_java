╔════════════════════════════════════════════════════════════════════════════╗
║                     Task List 部署快速參考卡                                ║
╚════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────┐
│ 🏗️  開發測試環境 (Docker Compose)                                        │
└─────────────────────────────────────────────────────────────────────────┘

  啟動:  make dev-start         或  ./scripts/deploy-dev.sh start
  停止:  make dev-stop          或  ./scripts/deploy-dev.sh stop
  狀態:  make dev-status        或  ./scripts/deploy-dev.sh status
  日誌:  make dev-logs          或  ./scripts/deploy-dev.sh logs
  清理:  make dev-clean         或  ./scripts/deploy-dev.sh clean

  快速啟動:  ./quick-start.sh
  直接使用:  docker-compose up -d

  訪問:
    應用程式: http://localhost:8080
    pgAdmin:  http://localhost:5050 (admin@taskapp.local/admin123)

┌─────────────────────────────────────────────────────────────────────────┐
│ 🚀 生產部署環境 (Terraform)                                              │
└─────────────────────────────────────────────────────────────────────────┘

  部署流程:
    1. make prod-init         # 初始化 Terraform
    2. make prod-plan         # 查看部署計劃
    3. make prod-apply        # 執行部署
    
  管理:
    狀態:  make prod-status
    輸出:  make prod-output
    銷毀:  make prod-destroy  ⚠️  (會刪除所有資料!)

  訪問:
    應用程式: http://localhost:8080

┌─────────────────────────────────────────────────────────────────────────┐
│ 🔧 開發工具                                                              │
└─────────────────────────────────────────────────────────────────────────┘

  初始化:      make setup
  建置:        make build
  測試:        make test
  Maven 建置:  make maven-build
  Maven 測試:  make maven-test
  本地運行:    make maven-run

┌─────────────────────────────────────────────────────────────────────────┐
│ 📁 重要文件                                                              │
└─────────────────────────────────────────────────────────────────────────┘

  docker-compose.yml              開發環境配置
  infra/main.tf                   生產環境配置
  scripts/deploy-dev.sh           開發部署腳本
  scripts/deploy-prod.sh          生產部署腳本
  Makefile                        統一命令入口
  DEPLOYMENT.md                   詳細部署文檔

┌─────────────────────────────────────────────────────────────────────────┐
│ 🆘 故障排查                                                              │
└─────────────────────────────────────────────────────────────────────────┘

  查看容器:      docker ps
  查看日誌:      docker logs <container_name>
  進入容器:      docker exec -it <container_name> sh
  重啟容器:      docker restart <container_name>
  
  開發環境容器:  task-list-app-dev, task-list-postgres-dev
  生產環境容器:  task-list-app-prod, task-list-postgres-prod

┌─────────────────────────────────────────────────────────────────────────┐
│ 📊 環境對比                                                              │
└─────────────────────────────────────────────────────────────────────────┘

  特性          │  開發環境          │  生產環境
  ──────────────┼───────────────────┼──────────────────
  部署工具      │  Docker Compose   │  Terraform
  命令前綴      │  make dev-*       │  make prod-*
  容器後綴      │  *-dev            │  *-prod
  日誌級別      │  DEBUG            │  INFO
  DDL 模式      │  update           │  validate
  pgAdmin       │  預設啟用          │  可選（預設關閉）
  適用場景      │  開發、測試        │  生產、預生產

┌─────────────────────────────────────────────────────────────────────────┐
│ 💡 最佳實踐                                                              │
└─────────────────────────────────────────────────────────────────────────┘

  1. 開發時使用 docker-compose (make dev-start)
  2. 生產部署使用 terraform (make prod-apply)
  3. 定期備份資料庫
  4. 使用強密碼並妥善保管
  5. 查看 DEPLOYMENT.md 了解更多詳情

┌─────────────────────────────────────────────────────────────────────────┐
│ 📞 獲取幫助                                                              │
└─────────────────────────────────────────────────────────────────────────┘

  make help                       查看所有可用命令
  ./scripts/deploy-dev.sh help    開發環境幫助
  ./scripts/deploy-prod.sh help   生產環境幫助
  cat DEPLOYMENT.md               查看完整文檔

╔════════════════════════════════════════════════════════════════════════════╗
║  只支援這兩種部署方式：docker-compose 和 terraform apply                    ║
╚════════════════════════════════════════════════════════════════════════════╝
